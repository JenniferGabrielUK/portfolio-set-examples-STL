#include <iostream>
#include <iomanip>
#include <set>
#include <string>
#include <algorithm>

template <typename T>
void display_1(const std::set<T> & set) {
  std::cout << "[";
	  for (const auto& elem : set)
	  	std::cout << elem << " ";
  	std::cout << "]" << std::endl;
  }

int main() {
	
	std::cout << std::setw(30) << std::left << std::setfill('-') << "\n" << std::endl;
	std::set<std::string> s{ "A","B","C" };
	display_1(s);
	auto result = s.insert("D"); //creates a std::pair with iterator pointing to D and second part a boolean
	display_1(s);
	std::cout << std::boolalpha;
	std::cout << "First pair of the iterator: " << *(result.first) << std::endl;
	std::cout << "Second pair of the iterator: " << result.second << std::endl;
	std::cout << std::endl;
	result = s.insert("A");
	display_1(s);
	std::cout << std::boolalpha;
	std::cout << "First pair of the iterator: " << *(result.first) << std::endl;
	std::cout << "Second pair of the iterator: " << result.second << std::endl;
	std::cout << std::setw(30) << std::left << std::setfill('-') << "\n" << std::endl;
	std::set<int> s_1{ 1,3,4,5,6,7,8,9,10 };
	display_1(s_1);
	auto result_1 = s_1.insert(2);
	display_1(s_1);

return 0;
}
